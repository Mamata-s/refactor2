#configuration file
#this is file for training srdense net with original training type

model_name: 'srdense'
exp_name: 'PATCH_SRDENSE_NB5_KAI_NE605_BS32_LR0.0005_P96_F2_ADAM_MSE_NEPOCH5005_ltypeADD'
training_type: 'original'
edge_type: 'downsample'  #options: canny, downsample. if downsample provide opt.downsample_train_dir and opt.downsample_val_dir also
loss_type: 'addition'  #options addition, original:
 #for addition mse is calculate after adding edges and loss calculated between (image and label image) else loss cal between edges
project_name: 'super_resolution'
wandb: True 
dataset_size: resolution_dataset50
size: 50
dataset_name: 'patch'
patch: True
patch_size: 96
num_epochs: 5005
num_workers: 8
seed: 123
lr: 0.0008
n_freq: 100 # model checkpoint saving frequency
train_batch_size: 64
val_batch_size: 1   #set the val batch size to 1 always as we need to claculate the psnr and ssim
# opt.device: cpu or gpu during training
factor: 2
lr_decay_factor: 0.9
init: 'kaiming'  #options: norm,xavier,kaiming

#srdense
criterion: mse
optimizer: adam
growth_rate: 7
num_blocks: 5
num_layers: 5
weights_file: None
scale: 4


note: 'training srdense net to predict edges trained with downsample edges on patch dataset and loss calculate after addition'